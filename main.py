from fastapi import FastAPI, Request, Response, Query, HTTPException, APIRouter
from fastapi.responses import PlainTextResponse
import httpx 

import os 

app = FastAPI()

ACCESS_TOKEN = os.environ.get("WHATSAPP_ACCESS_TOKEN")
PHONE_NUMBER_ID = os.environ.get("PHONE_NUMBER_ID")
WHATSAPP_HOOK_TOKEN = os.environ.get("WHATSAPP_HOOK_TOKEN")
WHATSAPP_API_URL = f"https://graph.facebook.com/v18.0/{PHONE_NUMBER_ID}/messages"
# "https://graph.facebook.com/v18.0/739443625915932/messages"

headers = {
    "Authorization": f"Bearer {ACCESS_TOKEN}",
    "Content-Type": "application/json"
}
    
def scripted_response(paciente_text):
    conversation = [
        # SPANISH
        ("Hola, me siento muy mal", "Hola üëã, lamento escuchar eso. Estoy aqu√≠ para ayudarte a encontrar un centro m√©dico cercano. ¬øPodr√≠as contarme qu√© s√≠ntomas tienes?"),
        ("Tengo un dolor fuerte en el pecho y me cuesta respirar", "Entiendo. Gracias por dec√≠rmelo. Estos s√≠ntomas pueden ser graves, as√≠ que es importante actuar r√°pido. ¬øMe puedes indicar tu ubicaci√≥n actual o d√≥nde te encuentras en Guatemala?"),
        ("Estoy en la zona 10 de la Ciudad de Guatemala, cerca del hotel Camino Real", "Gracias por la informaci√≥n. Por tus s√≠ntomas y tu ubicaci√≥n, te recomiendo acudir de inmediato al Centro M√©dico, que cuenta con un √°rea de emergencias equipada para atender problemas card√≠acos.\nüìç Direcci√≥n: 6a. Avenida 3-47, zona 10, Ciudad de Guatemala.\nüìû Tel√©fono de emergencias: +502 2319-4600.\n Ubicaci√≥n: https://share.google/VgSoqYSYNbmhLOUvE"),
        ("UBICACION", "Gracias por la informaci√≥n. Por tus s√≠ntomas y tu ubicaci√≥n, te recomiendo acudir de inmediato al Centro M√©dico, que cuenta con un √°rea de emergencias equipada para atender problemas card√≠acos.\nüìç Direcci√≥n: 6a. Avenida 3-47, zona 10, Ciudad de Guatemala.\nüìû Tel√©fono de emergencias: +502 2319-4600.\n Ubicaci√≥n: https://share.google/VgSoqYSYNbmhLOUvE"),
        ("Gracias, voy para all√°", "De nada, espero que te recuperes pronto üôè. Si necesitas m√°s ayuda en tu estancia en Guatemala, no dudes en escribirme.")
        # English
        ("Hi, i'm feeling sick", "Hello üëã, I‚Äôm sorry to hear that. I‚Äôm here to help you find a nearby medical center. Could you tell me what symptoms you‚Äôre experiencing?"),
        ("I have severe stomach pain and I‚Äôm feeling dizzy", "I understand, thank you for letting me know. Those symptoms can be serious, so it‚Äôs important to act quickly. Could you share your current location or where you are in Guatemala?"),
        ("I‚Äôm in Guatemala City, near the Hyatt Hotel", "Thanks for the information. Based on your symptoms and location, I recommend you go immediately to Centro M√©dico, which has a 24/7 emergency department ready to handle urgent cases.\nüìç Address:  6a. Avenida 3-47, zona 10, Ciudad de Guatemala.\nüìû Emergency phone: +502 2319-4600.\nüåê Map: https://share.google/VgSoqYSYNbmhLOUvE"),
        ("Thank you, I‚Äôm heading there now", "You‚Äôre welcome, I hope you feel better soon üôè. If you need more help while you‚Äôre in Guatemala, don‚Äôt hesitate to message me.")
    ]
    
    for paciente, bot in conversation:
        if paciente_text == paciente:
            return bot
    return "Lo siento, no tengo una respuesta para eso."


@app.get("/")
def home(): 
    return "App is live"

@app.get("/webhook")
async def verify_webhook(request: Request):
    params = dict(request.query_params)
    mode = params.get("hub.mode")
    token = params.get("hub.verify_token")
    challenge = params.get("hub.challenge")

    if mode and token:
        print(f"Comparing {WHATSAPP_HOOK_TOKEN} with {token}")
        if mode == "subscribe" and token == WHATSAPP_HOOK_TOKEN:
            return PlainTextResponse(content=challenge, status_code=200)
        else:
            raise HTTPException(status_code=403, detail="Verification failed")
    else:
        raise HTTPException(status_code=400, detail="Missing parameters")

@app.post("/webhook")
async def callback(request: Request): 
    # print("callback is beign called")
    data = await request.json()
    # print("Incoming data:", data)

    try:
        entry = data["entry"][0]
        changes = entry["changes"][0]
        value = changes["value"]
        messages = value.get("messages")

        if messages:
            message = messages[0]
            sender_id = message["from"]
            message_type = message.get("type", "text")

            text = ""
            location_data = None

            if message_type == "text":
                # Get the message text
                text = message.get("text", {}).get("body", "")
                response = scripted_response(text)
                
                try:
                    payload = {
                        "messaging_product": "whatsapp",
                        "to": sender_id,
                        "type": "text",
                        "text": {
                            "body": response
                        }
                    }
            
                    async with httpx.AsyncClient() as client:
                        resp = await client.post(WHATSAPP_API_URL, headers=headers, json=payload)
                except:
                    pass
            
            if message_type == "location":
                # Get the message text
                text = message.get("text", {}).get("body", "")
                response = scripted_response("UBICACION")
                
                try:
                    payload = {
                        "messaging_product": "whatsapp",
                        "to": sender_id,
                        "type": "text",
                        "text": {
                            "body": response
                        }
                    }
            
                    async with httpx.AsyncClient() as client:
                        resp = await client.post(WHATSAPP_API_URL, headers=headers, json=payload)
                except:
                    pass

    except Exception as e:
        print("Error:", e)
        

    return {"status": "received"}



